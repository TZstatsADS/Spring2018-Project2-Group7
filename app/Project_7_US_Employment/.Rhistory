#P16.1
pnorm(log(990/1000),mean = 0.001,sd = 0.015)
# after 5 trading days
pnorm(log(990/1000),mean = 0.005,sd = 0.015*sqrt(5))
#P16.3
pnorm(log(90/80),mean = 1.6,sd = 0.015*sqrt(2))
#P16.3
pnorm(log(90/80),mean = 0.16,sd = 0.015*sqrt(2))
#P16.3
1-pnorm(log(90/80),mean = 0.16,sd = 0.015*sqrt(2))
# after 5 trading days
pnorm(log(990/1000),mean = 0.005,sd = 0.015*sqrt(5))
#p17.10
1-pnorm(log(100/97),mean = 0.0002*20,sd = 0.03*sqrt(20))
#p40.1
t <- seq(1,20,by = 1)
fr <- 0.028+0.00042*t
cumprod(1+fr)
prod(1+fr)
prod(1+fr)-1
(prod(1+fr)-1)^(1/20)
install.packages("httr")
library(httr)
URL <- "http://download.bls.gov/pub/time.series/oe"
get.data <- GET(URL)
View(get.data)
data <- GET(URL)
get.data <- GET(URL)
data<-content(get.data)
install.packages("xm12")
data<-content(get.data)
install.packages("xml2")
library("xml2")
data<-content(get.data)
View(data)
data
class(data)
URL <- "https://download.bls.gov/pub/time.series/"
get.data <- GET(URL)
data<-content(get.data)
class(data)
View(get.data)
API.KEY <- "gEzBP3ISREUQ2xpmq52QDL2UBY1MR4axGbtFrrte"
URL <- "https://download.bls.gov/pub/time.series/"
get.data <- GET(URL, query=list(api_key=API.KEY,
school.name="Columbia University"))
get.data <- GET(URL)
get.data <- GET(URL, query=list(api_key=API.KEY,
school.name="Columbia University"))
data<-content(get.data)
class(data)
get.data
URL <- "https://download.bls.gov/pub/time.series/oe"
get.data <- GET(URL, query=list(api_key=API.KEY,
school.name="Columbia University"))
data<-content(get.data)
class(data)
API.KEY <- "gEzBP3ISREUQ2xpmq52QDL2UBY1MR4axGbtFrrte"
URL <- "https://download.bls.gov/pub/time.series/oe"
get.data <- GET(URL, query=list(api_key=API.KEY,
school.name="Columbia University"))
data<-content(get.data)
class(data)
API.KEY <- "6b0bac024dae458c81a05acebc747864"
URL <- "https://download.bls.gov/pub/time.series/oe"
get.data <- GET(URL, query=list(api_key=API.KEY,
school.name="Columbia University"))
data<-content(get.data)
class(data)
library(devtools)
install_github("mikeasilva/blsAPI")
install.packages("devtools")
install_github("mikeasilva/blsAPI")
install.packages("blsAPI")
library("blsAPI")
library("devtools")
knitr::opts_chunk$set(echo = TRUE)
GDP <- read.csv("../data/GDP.csv")
GDP <- rbind(c("1900",as.numeric(20.7)),GDP)
colnames(GDP) <- c("Year","Growth")
GDP$Growth <- as.numeric(GDP$Growth)
View(GDP)
#p41.12
t <- seq(1,8,by = 1)
fr <- 0.04+0.001*t
100/exp(sum(fr))
#p41.11
t <- seq(1,15,by = 1)
fr <- 0.033+0.0012*t
100/exp(sum(fr))
#p41.11
fn <- function(t){
0.033+0.0012t
}
#p41.11
fn <- function(t){
0.033+0.0012t
}
#p41.11
fn <- function(t){
0.033+0.0012t}
#p41.11
fn <- function(t){0.033+0.0012t}
#p41.11
fn <- function(t){0.033+0.0012*t}
integrate(fn,lower = 0,upper = 15)
100*exp((-1)*integrate(fn,lower = 0,upper = 15))
integrate(fn,lower = 0,upper = 15)
(-1)*integrate(fn,lower = 0,upper = 15)
(-1)
(-1)*integrate(fn,lower = 0,upper = 15)
100*exp(-1*integrate(fn,lower = 0,upper = 15))
100*exp(integrate(fn,lower = 0,upper = 15)*(-1))
100*exp(integrate(fn,lower = 0,upper = 15)
100*exp(integrate(fn,lower = 0,upper = 15))
100*exp((integrate(fn,lower = 0,upper = 15))*(-1))
integral <- integrate(fn,lower = 0,upper = 15)
View(integral)
100*exp((integral$value)*(-1))
#p41.12
fn <- function(t){0.04+0.001*t}
integral <- integrate(fn,lower = 0,upper = 8)
100*exp((integral$value)*(-1))
fn <- function(t){0.03+0.0013*t}
integral <- integrate(fn,lower = 0.5,upper = 8)
100*exp((integral$value)*(-1))
(76.61-70.33)/70.33
1021*exp((integral$value)*(-1))
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i)
new <- 21*exp((integral$value)*(-1))
vec <- c(vec,new)
}
vec <- c()
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i)
new <- 21*exp((integral$value)*(-1))
vec <- c(vec,new)
}
vec
sum(vec)+1021*exp((integral$value)*(-1))
#p43.22
fn <- function(t){0.022+0.005*t-0.004*t^2+0.0003*t^3}
#p43.22
fn <- function(t){(0.022+0.005*t-0.004*t^2+0.0003*t^3)/2}
integral <- integrate(fn,lower = 0,upper = 8)
1021*exp((integral$value)*(-1))
par.cpn<- 1021*exp((integral$value)*(-1))
vec <- c()
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i)
new <- 21*exp((integral$value)*(-1))
vec <- c(vec,new)
}
vec
sum(vec)+par.cpn
exp((integral$value)*(-1))
#dur
integral <- integrate(fn,lower = 0,upper = 8)
exp((integral$value)*(-1))
fn <- function(t){(0.022+0.005*t-0.004*t^2+0.0003*t^3)}
integral <- integrate(fn,lower = 0,upper = 4)
par.cpn<- 1021*exp((integral$value)*(-1))
vec <- c()
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i/2)
new <- 21*exp((integral$value)*(-1))
vec <- c(vec,new)
}
vec
sum(vec)+par.cpn
fn <- function(t){(0.022+0.005*t-0.004*t^2+0.0003*t^3)}
integral <- integrate(fn,lower = 0,upper = 4)
par.cpn<- 1021*exp((integral$value)*(-1))
vec <- c()
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i/2)
new <- 21*exp((integral$value)*(-1))
vec <- c(vec,new)
}
vec
price <- sum(vec)+par.cpn
#dur
fn <- function(t){(0.022+0.005*t-0.004*t^2+0.0003*t^3)}
integral <- integrate(fn,lower = 0,upper = 4)
par.cpn<- 1021*exp((integral$value)*(-1))*4
vec <- c()
for (i in 1:7){
integral <- integrate(fn,lower = 0,upper = i/2)
new <- 21*exp((integral$value)*(-1))*(i/2)
vec <- c(vec,new)
}
(sum(vec)+par.cpn)/price
#1
install.packages("quantmod")
library("quantmod")
install.packages("xts")
install.packages("xts")
install.packages("zoo")
library("quantmod")
library("xts")
install.packages("xts")
library("xts")
library("zoo")
library("xts")
library("quantmod")
install.packages("TTR")
install.packages("TTR")
library("TTR")
install.packages("TTR")
library("TTR")
library("quantmod")
library("zoo")
library("xts")
library("TTR")
library("quantmod")
stock.list <- c("MMM","AXP","AAPL","BA","CAT","CVX",
"CSCO","KO","DWDP","XOM","GE","GS",
"HD","IBM","INTC","JNJ","JPM","MCD",
"MRK","MSFT","NKE","PFE","PG","TRV",
"UNH","UTX","VZ","V","WMT","DIS")
data <- getSymbols("AAPL", auto.assign = F, from = "2017-01-01", to = "2018-01-01")
View(data)
setwd("C:/Users/Kevin Zhang/Documents/Data")
setwd("C:/Users/Kevin Zhang/Documents/Data")
### all images corresponding to digit "3"
zip.3<-read.table("train.3.txt", header=FALSE, sep=",")
zip.3
### all images corresponding to digit "3"
zip.3<-read.table("train.3.txt", header=FALSE, sep=",")
zip.3<-as.matrix(zip.3)
zip.3
### all images corresponding to digit "3"
zip.3<-read.table("train.3.txt", header=FALSE, sep=",")
View(zip.3)
zip.3<-as.matrix(zip.3)
View(zip.3)
### all images corresponding to digit "5"
zip.5<-read.table("train.5.txt", header=FALSE, sep=",")
zip.5<-as.matrix(zip.5)
### n.3 and n.5 are the total number of "3"s and "5"s, respectively.
n.3<-length(zip.3[,1])
n.5<-length(zip.5[,1])
### combine two data sets together
data<-rbind(zip.3, zip.5)
output.image<-function(vector) {
digit<-matrix(vector, nrow=16, ncol=16)
#index= seq(from=1, to =16, by=1)
index= seq(from=16, to =1, by=-1)
sym_digit = digit[,index]
image(sym_digit, col= gray((8:0)/8), axes=FALSE)
}
dim(zip.3)
install.packages("rmarkdown")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
##### subset dataframe
tmp = data
tmp = merge(tmp,state.coordinate, by = "STATE", all.x=T)
tmp = subset(tmp,OCC_TITLE == as.character(input$major))
data <- read.csv("state_M2016.csv",header = TRUE,as.is = FALSE)
state.coordinate <- read.csv("state_coordinate.csv",header = TRUE,as.is = FALSE)
data <- read.csv("state_M2016.csv",header = TRUE,as.is = FALSE)
getwd()
setwd(C:/Users/Kevin Zhang/Documents/GitHub/Spring2018-Project2-group-7/app/Project_7_US_Employment)
setwd(C://Users/Kevin Zhang/Documents/GitHub/Spring2018-Project2-group-7/app/Project_7_US_Employment)
setwd("C:/Users/Kevin Zhang/Documents/GitHub/Spring2018-Project2-group-7/app/Project_7_US_Employment")
data <- read.csv("state_M2016.csv",header = TRUE,as.is = FALSE)
state.coordinate <- read.csv("state_coordinate.csv",header = TRUE,as.is = FALSE)
shiny::runApp()
runApp()
library("leaflet")
runApp()
?awesomeIcons
runApp()
install.packages("ggplot2")
shiny::runApp()
library(shiny)
library("ggplot2")
library("ggmap")
library("leaflet")
runApp()
install.packages("ggplot2")
library("shiny")
library("ggplot2")
library("ggmap")
library("leaflet")
install.packages("ggplot2")
library("ggplot2")
library("ggmap")
library("leaflet")
runApp()
?awesomeIcons
SetColor <- function(data) {
sapply(as.numeric(data$A_MEAN), function(wage) {
if(wage <= 30000) {
"steelblue1"
} else if(wage <= 40000) {
"steelblue2"
} else if(wage <= 50000) {
"steelblue3"
} else if(wage <= 70000) {
"steelblue"
} else {
"steelblue4"
} })
}
SetColor(tmp)
SetColor <- function(data) {
sapply(as.numeric(data$A_MEAN), function(A_MEAN) {
if(wage <= 30000) {
"steelblue1"
} else if(wage <= 40000) {
"steelblue2"
} else if(wage <= 50000) {
"steelblue3"
} else if(wage <= 70000) {
"steelblue"
} else {
"steelblue4"
} })
}
SetColor(tmp)
SetColor <- function(data) {
sapply(as.numeric(data$A_MEAN), function(A_MEAN) {
if(A_MEAN <= 30000) {
"steelblue1"
} else if(A_MEAN <= 40000) {
"steelblue2"
} else if(A_MEAN <= 50000) {
"steelblue3"
} else if(A_MEAN <= 70000) {
"steelblue"
} else {
"steelblue4"
} })
}
SetColor(tmp)
##### subset dataframe
tmp = data
tmp = merge(tmp,state.coordinate, by = "STATE", all.x=T)
tmp = subset(tmp,OCC_TITLE == as.character(input$major))
runApp()
runApp()
